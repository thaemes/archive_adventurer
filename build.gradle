plugins {
    id "org.jetbrains.kotlin.jvm" version "1.8.21"
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id("org.jetbrains.kotlin.plugin.serialization") version "1.4.30" // Use the appropriate version

}

apply plugin: 'java'
apply plugin: 'kotlin'

//Defines what version of Java to use.
sourceCompatibility = 1.8

//Defines how Kotlin should compile.
compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        //Defines what jvm bytecode to use, 1.8 rather than 1.6
        jvmTarget = "1.8"
        apiVersion = "1.8"
        languageVersion = "1.8"
    }
}

//Defines how Kotlin should compile when testingTry to keep it the same as compileKotlin.
compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    kotlinOptions {
        //Defines what jvm bytecode to use, 1.8 rather than 1.6
        jvmTarget = "1.8"
        apiVersion = "1.8"
        languageVersion = "1.8"
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
//    jcenter()
    maven { url "https://s3-eu-west-1.amazonaws.com/furhat-maven/releases" }
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    maven { url "https://oss.sonatype.org/content/repositories/releases/org/xerial/sqlite-jdbc/" }
}


dependencies {
    implementation 'com.furhatrobotics.furhatos:furhat-commons:2.7.2'
    implementation 'khttp:khttp:0.1.0'
    //implementation 'org.json:json:20210307' // Use the latest version available
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.1.15"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2")
    implementation(files('SimpleNLG-NL-1.1.jar'))
    implementation 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
}

jar {
    def lowerCasedName = baseName.toLowerCase()
    def normalizedName = lowerCasedName.substring(0, 1).toUpperCase() + lowerCasedName.substring(1)
    manifest.attributes(
            'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
            'Main-Class': "furhatos.aphow to run p.${lowerCasedName}.${normalizedName}Skill"
    )
}

shadowJar {
    manifest {
        exclude '**/Log4j2Plugins.dat'
        exclude '**/node_modules'
    }
    from "skill.properties"
    from "assets"
    extension 'skill'
}